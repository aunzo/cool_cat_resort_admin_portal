generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Customer {
  id           String        @id @default(cuid())
  name         String
  address      String
  taxId        String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservations Reservation[]

  @@map("customers")
}

model Room {
  id               String            @id @default(cuid())
  name             String            @unique
  price            Float
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reservationRooms ReservationRoom[]

  @@map("rooms")
}

model Reservation {
  id           String            @id @default(cuid())
  number       Int
  customerId   String
  checkInDate  DateTime
  checkOutDate DateTime
  totalAmount  Float
  extraBed     Boolean           @default(false)
  notes        String?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  rooms        ReservationRoom[]
  customer     Customer          @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@map("reservations")
}

model ReservationRoom {
  id            String      @id @default(cuid())
  reservationId String
  roomId        String
  createdAt     DateTime    @default(now())
  reservation   Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
  room          Room        @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@unique([reservationId, roomId])
  @@map("reservation_rooms")
}
